{"dependencies":[{"name":"../classes","loc":{"line":1,"column":28}},{"name":"../utils","loc":{"line":2,"column":47}},{"name":"./domUtils","loc":{"line":3,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isLoading = exports.isToast = exports.isModal = exports.getFocusableElements = exports.getCloseButton = exports.getFooter = exports.getActions = exports.getButtonsWrapper = exports.getCancelButton = exports.getConfirmButton = exports.getValidationMessage = exports.getProgressSteps = exports.getImage = exports.getContent = exports.getTitle = exports.getIcons = exports.getPopup = exports.getContainer = undefined;\n\nvar _classes = require(\"../classes\");\n\nvar _utils = require(\"../utils\");\n\nvar _domUtils = require(\"./domUtils\");\n\nconst getContainer = exports.getContainer = () => document.body.querySelector('.' + _classes.swalClasses.container);\n\nconst elementByClass = className => {\n  const container = getContainer();\n  return container ? container.querySelector('.' + className) : null;\n};\n\nconst getPopup = exports.getPopup = () => elementByClass(_classes.swalClasses.popup);\n\nconst getIcons = exports.getIcons = () => {\n  const popup = getPopup();\n  return (0, _utils.toArray)(popup.querySelectorAll('.' + _classes.swalClasses.icon));\n};\n\nconst getTitle = exports.getTitle = () => elementByClass(_classes.swalClasses.title);\n\nconst getContent = exports.getContent = () => elementByClass(_classes.swalClasses.content);\n\nconst getImage = exports.getImage = () => elementByClass(_classes.swalClasses.image);\n\nconst getProgressSteps = exports.getProgressSteps = () => elementByClass(_classes.swalClasses.progresssteps);\n\nconst getValidationMessage = exports.getValidationMessage = () => elementByClass(_classes.swalClasses['validation-message']);\n\nconst getConfirmButton = exports.getConfirmButton = () => elementByClass(_classes.swalClasses.confirm);\n\nconst getCancelButton = exports.getCancelButton = () => elementByClass(_classes.swalClasses.cancel);\n\n/* @deprecated */\n/* istanbul ignore next */\nconst getButtonsWrapper = exports.getButtonsWrapper = () => {\n  (0, _utils.warnOnce)(`swal.getButtonsWrapper() is deprecated and will be removed in the next major release, use swal.getActions() instead`);\n  return elementByClass(_classes.swalClasses.actions);\n};\n\nconst getActions = exports.getActions = () => elementByClass(_classes.swalClasses.actions);\n\nconst getFooter = exports.getFooter = () => elementByClass(_classes.swalClasses.footer);\n\nconst getCloseButton = exports.getCloseButton = () => elementByClass(_classes.swalClasses.close);\n\nconst getFocusableElements = exports.getFocusableElements = () => {\n  const focusableElementsWithTabindex = (0, _utils.toArray)(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])'))\n  // sort according to tabindex\n  .sort((a, b) => {\n    a = parseInt(a.getAttribute('tabindex'));\n    b = parseInt(b.getAttribute('tabindex'));\n    if (a > b) {\n      return 1;\n    } else if (a < b) {\n      return -1;\n    }\n    return 0;\n  });\n\n  // https://github.com/jkup/focusable/blob/master/index.js\n  const otherFocusableElements = (0, _utils.toArray)(getPopup().querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex=\"0\"], [contenteditable], audio[controls], video[controls]')).filter(el => el.getAttribute('tabindex') !== '-1');\n\n  return (0, _utils.uniqueArray)(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(el => (0, _domUtils.isVisible)(el));\n};\n\nconst isModal = exports.isModal = () => {\n  return !isToast() && !document.body.classList.contains(_classes.swalClasses['no-backdrop']);\n};\n\nconst isToast = exports.isToast = () => {\n  return document.body.classList.contains(_classes.swalClasses['toast-shown']);\n};\n\nconst isLoading = exports.isLoading = () => {\n  return getPopup().hasAttribute('data-loading');\n};"},"hash":"2c7ab65a2d9aeaa9b5dbdc05d3c4b5e6"}