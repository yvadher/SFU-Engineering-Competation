{"dependencies":[{"name":"../../classes.js","loc":{"line":1,"column":28}},{"name":"../../utils.js","loc":{"line":2,"column":21}},{"name":"../../dom/index","loc":{"line":3,"column":21}},{"name":"../../../sweetalert2","loc":{"line":4,"column":23}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderProgressSteps = undefined;\n\nvar _classes = require(\"../../classes.js\");\n\nvar _utils = require(\"../../utils.js\");\n\nvar _index = require(\"../../dom/index\");\n\nvar dom = _interopRequireWildcard(_index);\n\nvar _sweetalert = require(\"../../../sweetalert2\");\n\nvar _sweetalert2 = _interopRequireDefault(_sweetalert);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nconst renderProgressSteps = exports.renderProgressSteps = params => {\n  let progressStepsContainer = dom.getProgressSteps();\n  let currentProgressStep = parseInt(params.currentProgressStep === null ? _sweetalert2.default.getQueueStep() : params.currentProgressStep, 10);\n  if (params.progressSteps && params.progressSteps.length) {\n    dom.show(progressStepsContainer);\n    progressStepsContainer.innerHTML = '';\n    if (currentProgressStep >= params.progressSteps.length) {\n      (0, _utils.warn)('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n    params.progressSteps.forEach((step, index) => {\n      let circle = document.createElement('li');\n      dom.addClass(circle, _classes.swalClasses.progresscircle);\n      circle.innerHTML = step;\n      if (index === currentProgressStep) {\n        dom.addClass(circle, _classes.swalClasses.activeprogressstep);\n      }\n      progressStepsContainer.appendChild(circle);\n      if (index !== params.progressSteps.length - 1) {\n        let line = document.createElement('li');\n        dom.addClass(line, _classes.swalClasses.progressline);\n        if (params.progressStepsDistance) {\n          line.style.width = params.progressStepsDistance;\n        }\n        progressStepsContainer.appendChild(line);\n      }\n    });\n  } else {\n    dom.hide(progressStepsContainer);\n  }\n};"},"hash":"223c74a329d229fd9049d5f2571273dd"}