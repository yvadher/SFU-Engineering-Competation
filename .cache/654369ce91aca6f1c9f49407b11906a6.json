{"dependencies":[{"name":"./utils/utils.js","loc":{"line":1,"column":22}},{"name":"./utils/DismissReason","loc":{"line":2,"column":30}},{"name":"./staticMethods","loc":{"line":3,"column":31}},{"name":"./instanceMethods","loc":{"line":4,"column":33}},{"name":"./privateProps","loc":{"line":5,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = require(\"./utils/utils.js\");\n\nvar _DismissReason = require(\"./utils/DismissReason\");\n\nvar _staticMethods = require(\"./staticMethods\");\n\nvar staticMethods = _interopRequireWildcard(_staticMethods);\n\nvar _instanceMethods = require(\"./instanceMethods\");\n\nvar instanceMethods = _interopRequireWildcard(_instanceMethods);\n\nvar _privateProps = require(\"./privateProps\");\n\nvar _privateProps2 = _interopRequireDefault(_privateProps);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nlet currentInstance;\n\n// SweetAlert constructor\nfunction SweetAlert(...args) {\n  // Prevent run in Node env\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  // Check for the existence of Promise\n  /* istanbul ignore if */\n  if (typeof Promise === 'undefined') {\n    (0, _utils.error)('This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)');\n  }\n\n  if (args.length === 0) {\n    (0, _utils.error)('At least 1 argument is expected!');\n    return false;\n  }\n\n  currentInstance = this;\n\n  const outerParams = Object.freeze(this.constructor.argsToParams(args));\n\n  Object.defineProperties(this, {\n    params: {\n      value: outerParams,\n      writable: false,\n      enumerable: true\n    }\n  });\n\n  const promise = this._main(this.params);\n  _privateProps2.default.promise.set(this, promise);\n}\n\n// `catch` cannot be the name of a module export, so we define our thenable methods here instead\nSweetAlert.prototype.then = function (onFulfilled, onRejected) {\n  const promise = _privateProps2.default.promise.get(this);\n  return promise.then(onFulfilled, onRejected);\n};\nSweetAlert.prototype.catch = function (onRejected) {\n  const promise = _privateProps2.default.promise.get(this);\n  return promise.catch(onRejected);\n};\nSweetAlert.prototype.finally = function (onFinally) {\n  const promise = _privateProps2.default.promise.get(this);\n  return promise.finally(onFinally);\n};\n\n// Assign instance methods from src/instanceMethods/*.js to prototype\nObject.assign(SweetAlert.prototype, instanceMethods);\n\n// Assign static methods from src/staticMethods/*.js to constructor\nObject.assign(SweetAlert, staticMethods);\n\n// Proxy to instance methods to constructor, for now, for backwards compatibility\nObject.keys(instanceMethods).forEach(key => {\n  SweetAlert[key] = function (...args) {\n    if (currentInstance) {\n      return currentInstance[key](...args);\n    }\n  };\n});\n\nSweetAlert.DismissReason = _DismissReason.DismissReason;\n\n/* istanbul ignore next */\nSweetAlert.noop = () => {};\n\nexports.default = SweetAlert;"},"hash":"3aacbe0f7be17868cd71117d67f95540"}