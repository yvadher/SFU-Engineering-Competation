{"dependencies":[{"name":"../../classes.js","loc":{"line":1,"column":28}},{"name":"../../dom/index","loc":{"line":2,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderActions = undefined;\n\nvar _classes = require(\"../../classes.js\");\n\nvar _index = require(\"../../dom/index\");\n\nvar dom = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nconst renderActions = exports.renderActions = params => {\n  const actions = dom.getActions();\n  const confirmButton = dom.getConfirmButton();\n  const cancelButton = dom.getCancelButton();\n\n  // Actions (buttons) wrapper\n  if (!params.showConfirmButton && !params.showCancelButton) {\n    dom.hide(actions);\n  } else {\n    dom.show(actions);\n  }\n\n  // Cancel button\n  if (params.showCancelButton) {\n    cancelButton.style.display = 'inline-block';\n  } else {\n    dom.hide(cancelButton);\n  }\n\n  // Confirm button\n  if (params.showConfirmButton) {\n    confirmButton.style.removeProperty('display');\n  } else {\n    dom.hide(confirmButton);\n  }\n\n  // Edit text on confirm and cancel buttons\n  confirmButton.innerHTML = params.confirmButtonText;\n  cancelButton.innerHTML = params.cancelButtonText;\n\n  // ARIA labels for confirm and cancel buttons\n  confirmButton.setAttribute('aria-label', params.confirmButtonAriaLabel);\n  cancelButton.setAttribute('aria-label', params.cancelButtonAriaLabel);\n\n  // Add buttons custom classes\n  confirmButton.className = _classes.swalClasses.confirm;\n  dom.addClass(confirmButton, params.confirmButtonClass);\n  cancelButton.className = _classes.swalClasses.cancel;\n  dom.addClass(cancelButton, params.cancelButtonClass);\n\n  // Buttons styling\n  if (params.buttonsStyling) {\n    dom.addClass([confirmButton, cancelButton], _classes.swalClasses.styled);\n\n    // Buttons background colors\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n    }\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n    }\n\n    // Loading state\n    const confirmButtonBackgroundColor = window.getComputedStyle(confirmButton).getPropertyValue('background-color');\n    confirmButton.style.borderLeftColor = confirmButtonBackgroundColor;\n    confirmButton.style.borderRightColor = confirmButtonBackgroundColor;\n  } else {\n    dom.removeClass([confirmButton, cancelButton], _classes.swalClasses.styled);\n\n    confirmButton.style.backgroundColor = confirmButton.style.borderLeftColor = confirmButton.style.borderRightColor = '';\n    cancelButton.style.backgroundColor = cancelButton.style.borderLeftColor = cancelButton.style.borderRightColor = '';\n  }\n};"},"hash":"d4c351bb25263daad6a963611c759dc9"}