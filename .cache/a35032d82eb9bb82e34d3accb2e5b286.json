{"dependencies":[{"name":"./classes.js","loc":{"line":1,"column":28}},{"name":"./utils.js","loc":{"line":2,"column":21}},{"name":"./dom/index","loc":{"line":3,"column":21}},{"name":"../sweetalert2","loc":{"line":4,"column":23}},{"name":"./defaultInputValidators","loc":{"line":5,"column":35}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setParameters;\n\nvar _classes = require(\"./classes.js\");\n\nvar _utils = require(\"./utils.js\");\n\nvar _index = require(\"./dom/index\");\n\nvar dom = _interopRequireWildcard(_index);\n\nvar _sweetalert = require(\"../sweetalert2\");\n\nvar _sweetalert2 = _interopRequireDefault(_sweetalert);\n\nvar _defaultInputValidators = require(\"./defaultInputValidators\");\n\nvar _defaultInputValidators2 = _interopRequireDefault(_defaultInputValidators);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Set type, text and actions on popup\n *\n * @param params\n * @returns {boolean}\n */\nfunction setParameters(params) {\n  // Use default `inputValidator` for supported input types if not provided\n  if (!params.inputValidator) {\n    Object.keys(_defaultInputValidators2.default).forEach(key => {\n      if (params.input === key) {\n        params.inputValidator = params.expectRejections ? _defaultInputValidators2.default[key] : _sweetalert2.default.adaptInputValidator(_defaultInputValidators2.default[key]);\n      }\n    });\n  }\n\n  // params.extraParams is @deprecated\n  if (params.validationMessage) {\n    if (typeof params.extraParams !== 'object') {\n      params.extraParams = {};\n    }\n    params.extraParams.validationMessage = params.validationMessage;\n  }\n\n  // Determine if the custom target element is valid\n  if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n    (0, _utils.warn)('Target parameter is not valid, defaulting to \"body\"');\n    params.target = 'body';\n  }\n\n  // Animation\n  if (typeof params.animation === 'function') {\n    params.animation = params.animation.call();\n  }\n\n  let popup;\n  const oldPopup = dom.getPopup();\n  let targetElement = typeof params.target === 'string' ? document.querySelector(params.target) : params.target;\n  // If the model target has changed, refresh the popup\n  if (oldPopup && targetElement && oldPopup.parentNode !== targetElement.parentNode) {\n    popup = dom.init(params);\n  } else {\n    popup = oldPopup || dom.init(params);\n  }\n\n  // Set popup width\n  if (params.width) {\n    popup.style.width = typeof params.width === 'number' ? params.width + 'px' : params.width;\n  }\n\n  // Set popup padding\n  if (params.padding) {\n    popup.style.padding = typeof params.padding === 'number' ? params.padding + 'px' : params.padding;\n  }\n\n  // Set popup background\n  if (params.background) {\n    popup.style.background = params.background;\n  }\n  const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n  const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n  for (let i = 0; i < successIconParts.length; i++) {\n    successIconParts[i].style.backgroundColor = popupBackgroundColor;\n  }\n\n  const container = dom.getContainer();\n  const closeButton = dom.getCloseButton();\n  const footer = dom.getFooter();\n\n  // Title\n  dom.renderTitle(params);\n\n  // Content\n  dom.renderContent(params);\n\n  // Backdrop\n  if (typeof params.backdrop === 'string') {\n    dom.getContainer().style.background = params.backdrop;\n  } else if (!params.backdrop) {\n    dom.addClass([document.documentElement, document.body], _classes.swalClasses['no-backdrop']);\n  }\n  if (!params.backdrop && params.allowOutsideClick) {\n    (0, _utils.warn)('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n  }\n\n  // Position\n  if (params.position in _classes.swalClasses) {\n    dom.addClass(container, _classes.swalClasses[params.position]);\n  } else {\n    (0, _utils.warn)('The \"position\" parameter is not valid, defaulting to \"center\"');\n    dom.addClass(container, _classes.swalClasses.center);\n  }\n\n  // Grow\n  if (params.grow && typeof params.grow === 'string') {\n    let growClass = 'grow-' + params.grow;\n    if (growClass in _classes.swalClasses) {\n      dom.addClass(container, _classes.swalClasses[growClass]);\n    }\n  }\n\n  // Close button\n  if (params.showCloseButton) {\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);\n    dom.show(closeButton);\n  } else {\n    dom.hide(closeButton);\n  }\n\n  // Default Class\n  popup.className = _classes.swalClasses.popup;\n  if (params.toast) {\n    dom.addClass([document.documentElement, document.body], _classes.swalClasses['toast-shown']);\n    dom.addClass(popup, _classes.swalClasses.toast);\n  } else {\n    dom.addClass(popup, _classes.swalClasses.modal);\n  }\n\n  // Custom Class\n  if (params.customClass) {\n    dom.addClass(popup, params.customClass);\n  }\n\n  // Progress steps\n  dom.renderProgressSteps(params);\n\n  // Icon\n  dom.renderIcon(params);\n\n  // Image\n  dom.renderImage(params);\n\n  // Actions (buttons)\n  dom.renderActions(params);\n\n  // Footer\n  dom.parseHtmlToContainer(params.footer, footer);\n\n  // CSS animation\n  if (params.animation === true) {\n    dom.removeClass(popup, _classes.swalClasses.noanimation);\n  } else {\n    dom.addClass(popup, _classes.swalClasses.noanimation);\n  }\n\n  // showLoaderOnConfirm && preConfirm\n  if (params.showLoaderOnConfirm && !params.preConfirm) {\n    (0, _utils.warn)('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n  }\n}"},"hash":"91ea094bf04513be3224f6f9b4d8bf2a"}