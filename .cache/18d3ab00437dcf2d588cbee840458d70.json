{"dependencies":[{"name":"./dom/index","loc":{"line":1,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.undoScrollbar = exports.fixScrollbar = undefined;\n\nvar _index = require(\"./dom/index\");\n\nvar dom = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nconst fixScrollbar = exports.fixScrollbar = () => {\n  // for queues, do not do this more than once\n  if (dom.states.previousBodyPadding !== null) {\n    return;\n  }\n  // if the body has overflow\n  if (document.body.scrollHeight > window.innerHeight) {\n    // add padding so the content doesn't shift after removal of scrollbar\n    dom.states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n    document.body.style.paddingRight = dom.states.previousBodyPadding + dom.measureScrollbar() + 'px';\n  }\n};\n\nconst undoScrollbar = exports.undoScrollbar = () => {\n  if (dom.states.previousBodyPadding !== null) {\n    document.body.style.paddingRight = dom.states.previousBodyPadding;\n    dom.states.previousBodyPadding = null;\n  }\n};"},"hash":"776cc94bf9ac6832c92ba089812a3f68"}