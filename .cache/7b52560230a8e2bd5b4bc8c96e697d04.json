{"dependencies":[{"name":"../utils/dom/index","loc":{"line":1,"column":21}},{"name":"../utils/utils","loc":{"line":2,"column":25}},{"name":"../utils/classes","loc":{"line":3,"column":28}},{"name":"../privateProps","loc":{"line":4,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.showValidationMessage = showValidationMessage;\nexports.resetValidationMessage = resetValidationMessage;\nexports.resetValidationError = resetValidationError;\nexports.showValidationError = showValidationError;\n\nvar _index = require(\"../utils/dom/index\");\n\nvar dom = _interopRequireWildcard(_index);\n\nvar _utils = require(\"../utils/utils\");\n\nvar _classes = require(\"../utils/classes\");\n\nvar _privateProps = require(\"../privateProps\");\n\nvar _privateProps2 = _interopRequireDefault(_privateProps);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// Show block with validation message\nfunction showValidationMessage(error) {\n  const domCache = _privateProps2.default.domCache.get(this);\n  domCache.validationMessage.innerHTML = error;\n  const popupComputedStyle = window.getComputedStyle(domCache.popup);\n  domCache.validationMessage.style.marginLeft = `-${popupComputedStyle.getPropertyValue('padding-left')}`;\n  domCache.validationMessage.style.marginRight = `-${popupComputedStyle.getPropertyValue('padding-right')}`;\n  dom.show(domCache.validationMessage);\n\n  const input = this.getInput();\n  if (input) {\n    input.setAttribute('aria-invalid', true);\n    input.setAttribute('aria-describedBy', _classes.swalClasses['validation-message']);\n    dom.focusInput(input);\n    dom.addClass(input, _classes.swalClasses.inputerror);\n  }\n}\n\n// Hide block with validation message\nfunction resetValidationMessage() {\n  const domCache = _privateProps2.default.domCache.get(this);\n  if (domCache.validationMessage) {\n    dom.hide(domCache.validationMessage);\n  }\n\n  const input = this.getInput();\n  if (input) {\n    input.removeAttribute('aria-invalid');\n    input.removeAttribute('aria-describedBy');\n    dom.removeClass(input, _classes.swalClasses.inputerror);\n  }\n}\n\n// @deprecated\n/* istanbul ignore next */\nfunction resetValidationError() {\n  (0, _utils.warnOnce)(`Swal.resetValidationError() is deprecated and will be removed in the next major release, use Swal.resetValidationMessage() instead`);\n  resetValidationMessage.bind(this)();\n}\n\n// @deprecated\n/* istanbul ignore next */\nfunction showValidationError(error) {\n  (0, _utils.warnOnce)(`Swal.showValidationError() is deprecated and will be removed in the next major release, use Swal.showValidationMessage() instead`);\n  showValidationMessage.bind(this)(error);\n}"},"hash":"bea95202b0b1b1c5236ab2c3af0cf89b"}