{"dependencies":[{"name":"../utils/dom/index","loc":{"line":1,"column":21}},{"name":"../utils/classes","loc":{"line":2,"column":28}},{"name":"../privateProps","loc":{"line":3,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInput = getInput;\n\nvar _index = require(\"../utils/dom/index\");\n\nvar dom = _interopRequireWildcard(_index);\n\nvar _classes = require(\"../utils/classes\");\n\nvar _privateProps = require(\"../privateProps\");\n\nvar _privateProps2 = _interopRequireDefault(_privateProps);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// Get input element by specified type or, if type isn't specified, by params.input\nfunction getInput(inputType) {\n  const innerParams = _privateProps2.default.innerParams.get(this);\n  const domCache = _privateProps2.default.domCache.get(this);\n  inputType = inputType || innerParams.input;\n  if (!inputType) {\n    return null;\n  }\n  switch (inputType) {\n    case 'select':\n    case 'textarea':\n    case 'file':\n      return dom.getChildByClass(domCache.content, _classes.swalClasses[inputType]);\n    case 'checkbox':\n      return domCache.popup.querySelector(`.${_classes.swalClasses.checkbox} input`);\n    case 'radio':\n      return domCache.popup.querySelector(`.${_classes.swalClasses.radio} input:checked`) || domCache.popup.querySelector(`.${_classes.swalClasses.radio} input:first-child`);\n    case 'range':\n      return domCache.popup.querySelector(`.${_classes.swalClasses.range} input`);\n    default:\n      return dom.getChildByClass(domCache.content, _classes.swalClasses.input);\n  }\n}"},"hash":"35277ca686d92a3f68f2e12705696099"}